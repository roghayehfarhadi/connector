version: '3'

services:
  prometheus:
    container_name: prometheus
    image: nexus3.snpb.app:8082/prom/prometheus:v2.3.2
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--web.enable-lifecycle'
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
    networks:
      - simple_kafka
  grafana:
    container_name: grafana
    image: grafana/grafana-enterprise:8.2.0
    ports:
      - 3000:3000
    depends_on:
      - prometheus
    networks:
      - simple_kafka
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management-alpine
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - rabbit_lib:/var/lib/rabbitmq/
      - rabbit_log:/var/log/rabbitmq
    networks:
      - simple_kafka
  zookeeper:
    container_name: zookeeper
    image: 'bitnami/zookeeper:latest'
    ports:
      - 2181:2181
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    volumes:
      - zookeeper_data:/bitnami/zookeeper
    networks:
      - simple_kafka
  kafka0:
    container_name: kafka0
    image: bitnami/kafka:latest
    ports:
      - 9092:9092
    environment:
      - KAFKA_BROKER_ID=0
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka0:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - kafka0_data:/bitnami/kafka
    depends_on:
      - zookeeper
    networks:
      - simple_kafka
  kafka1:
    container_name: kafka1
    image: bitnami/kafka:latest
    ports:
      - 9093:9093
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=PLAINTEXT://:9093
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka1:9093
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - kafka1_data:/bitnami/kafka
    depends_on:
      - zookeeper
    networks:
      - simple_kafka
  elasticsearch:
    container_name: elasticsearch
    image: nexus3.snpb.app:8082/elasticsearch:7.13.2
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - cluster.initial_master_nodes=elasticsearch
      - node.store.allow_mmap=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - simple_kafka
  kibana:
    container_name: kibana
    image: nexus3.snpb.app:8082/kibana:7.13.2
    environment:
      - ./kibana.yml:/usr/share/kibana/config/kibana.yml
      - elasticsearch.hosts=["http://elasticsearch:9200"]
      - server.host= 0.0.0.0
    ports:
      - 5601:5601
    networks:
      - simple_kafka
  apm-server:
    container_name: apm-server
    image: nexus3.snpb.app:8082/apm-server/apm-server:7.9.3
    cap_add: [ "CHOWN", "DAC_OVERRIDE", "SETGID", "SETUID" ]
    cap_drop: [ "ALL" ]
    ports:
      - 8200:8200
    networks:
      - simple_kafka
    command: >
      apm-server -e
        -E apm-server.rum.enabled=true
        -E setup.kibana.host=http://kibana:5601
        -E setup.template.settings.index.number_of_replicas=0
        -E apm-server.kibana.enabled=true
        -E apm-server.kibana.host=http://kibana:5601
        -E output.elasticsearch.hosts=["elasticsearch:9200"]
    depends_on:
      - elasticsearch
      - kibana
  connector:
    container_name: connector
    build: .
    ports:
      - "8085:8085"
    environment:
      - APM_SERVER_URLS=http://apm-server:8200
    networks:
      - simple_kafka
    depends_on:
      - zookeeper
      - kafka0
      - kafka1
      - rabbitmq
      - elasticsearch
      - kibana
      - apm-server
volumes:
  rabbit_lib:
    driver: local
  rabbit_log:
    driver: local
  zookeeper_data:
    driver: local
  kafka0_data:
    driver: local
  kafka1_data:
    driver: local
  esdata:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
networks:
  simple_kafka:
    driver: bridge
